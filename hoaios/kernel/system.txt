
system：     文件格式 elf64-x86-64


Disassembly of section .text:

ffff800000100000 <_start>:
ffff800000100000:	66 87 db             	xchg   %bx,%bx
ffff800000100003:	66 b8 10 00          	mov    $0x10,%ax
ffff800000100007:	8e d8                	mov    %eax,%ds
ffff800000100009:	8e c0                	mov    %eax,%es
ffff80000010000b:	8e e0                	mov    %eax,%fs
ffff80000010000d:	8e d0                	mov    %eax,%ss
ffff80000010000f:	bc 00 7e 00 00       	mov    $0x7e00,%esp
ffff800000100014:	66 87 db             	xchg   %bx,%bx
ffff800000100017:	0f 01 15 c2 40 00 00 	lgdt   0x40c2(%rip)        # ffff8000001040e0 <GDT_END>
ffff80000010001e:	66 87 db             	xchg   %bx,%bx
ffff800000100021:	66 87 db             	xchg   %bx,%bx
ffff800000100024:	0f 01 1d bf 50 00 00 	lidt   0x50bf(%rip)        # ffff8000001050ea <IDT_END>
ffff80000010002b:	66 87 db             	xchg   %bx,%bx
ffff80000010002e:	66 b8 10 00          	mov    $0x10,%ax
ffff800000100032:	8e d8                	mov    %eax,%ds
ffff800000100034:	8e c0                	mov    %eax,%es
ffff800000100036:	8e e0                	mov    %eax,%fs
ffff800000100038:	8e e8                	mov    %eax,%gs
ffff80000010003a:	8e d0                	mov    %eax,%ss
ffff80000010003c:	48 c7 c4 00 7e 00 00 	mov    $0x7e00,%rsp
ffff800000100043:	48 c7 c0 00 10 10 00 	mov    $0x101000,%rax
ffff80000010004a:	0f 22 d8             	mov    %rax,%cr3
ffff80000010004d:	48 8b 05 05 00 00 00 	mov    0x5(%rip),%rax        # ffff800000100059 <switch_seg>
ffff800000100054:	6a 08                	pushq  $0x8
ffff800000100056:	50                   	push   %rax
ffff800000100057:	48 cb                	lretq  

ffff800000100059 <switch_seg>:
ffff800000100059:	61                   	(bad)  
ffff80000010005a:	00 10                	add    %dl,(%rax)
ffff80000010005c:	00 00                	add    %al,(%rax)
ffff80000010005e:	80 ff ff             	cmp    $0xff,%bh

ffff800000100061 <entry64>:
ffff800000100061:	48 c7 c0 10 00 00 00 	mov    $0x10,%rax
ffff800000100068:	48 8e d8             	mov    %rax,%ds
ffff80000010006b:	48 8e c0             	mov    %rax,%es
ffff80000010006e:	48 8e e8             	mov    %rax,%gs
ffff800000100071:	48 8e d0             	mov    %rax,%ss
ffff800000100074:	48 bc 00 7e 00 00 00 	movabs $0xffff800000007e00,%rsp
ffff80000010007b:	80 ff ff 
ffff80000010007e:	48 8b 05 05 00 00 00 	mov    0x5(%rip),%rax        # ffff80000010008a <go_to_kernel>
ffff800000100085:	6a 08                	pushq  $0x8
ffff800000100087:	50                   	push   %rax
ffff800000100088:	48 cb                	lretq  

ffff80000010008a <go_to_kernel>:
ffff80000010008a:	00 40 10             	add    %al,0x10(%rax)
ffff80000010008d:	00 00                	add    %al,(%rax)
ffff80000010008f:	80 ff ff             	cmp    $0xff,%bh
ffff800000100092:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
	...

ffff800000101000 <__PML4E>:
ffff800000101000:	07                   	(bad)  
ffff800000101001:	20 10                	and    %dl,(%rax)
	...
ffff8000001017ff:	00 07                	add    %al,(%rdi)
ffff800000101801:	20 10                	and    %dl,(%rax)
	...

ffff800000102000 <__PDPTE>:
ffff800000102000:	03 30                	add    (%rax),%esi
ffff800000102002:	10 00                	adc    %al,(%rax)
	...

ffff800000103000 <__PDE>:
ffff800000103000:	83 00 00             	addl   $0x0,(%rax)
ffff800000103003:	00 00                	add    %al,(%rax)
ffff800000103005:	00 00                	add    %al,(%rax)
ffff800000103007:	00 83 00 20 00 00    	add    %al,0x2000(%rbx)
ffff80000010300d:	00 00                	add    %al,(%rax)
ffff80000010300f:	00 83 00 40 00 00    	add    %al,0x4000(%rbx)
ffff800000103015:	00 00                	add    %al,(%rax)
ffff800000103017:	00 83 00 60 00 00    	add    %al,0x6000(%rbx)
ffff80000010301d:	00 00                	add    %al,(%rax)
ffff80000010301f:	00 83 00 80 00 00    	add    %al,0x8000(%rbx)
ffff800000103025:	00 00                	add    %al,(%rax)
ffff800000103027:	00 83 00 00 e0 00    	add    %al,0xe00000(%rbx)
ffff80000010302d:	00 00                	add    %al,(%rax)
ffff80000010302f:	00 83 00 20 e0 00    	add    %al,0xe02000(%rbx)
ffff800000103035:	00 00                	add    %al,(%rax)
ffff800000103037:	00 83 00 40 e0 00    	add    %al,0xe04000(%rbx)
ffff80000010303d:	00 00                	add    %al,(%rax)
ffff80000010303f:	00 83 00 60 e0 00    	add    %al,0xe06000(%rbx)
ffff800000103045:	00 00                	add    %al,(%rax)
ffff800000103047:	00 83 00 80 e0 00    	add    %al,0xe08000(%rbx)
ffff80000010304d:	00 00                	add    %al,(%rax)
ffff80000010304f:	00 83 00 a0 e0 00    	add    %al,0xe0a000(%rbx)
ffff800000103055:	00 00                	add    %al,(%rax)
ffff800000103057:	00 83 00 c0 e0 00    	add    %al,0xe0c000(%rbx)
ffff80000010305d:	00 00                	add    %al,(%rax)
ffff80000010305f:	00 83 00 e0 e0 00    	add    %al,0xe0e000(%rbx)
	...

ffff800000104000 <Start_Kernel>:
ffff800000104000:	55                   	push   %rbp
ffff800000104001:	48 89 e5             	mov    %rsp,%rbp
ffff800000104004:	48 8d 05 f9 ff ff ff 	lea    -0x7(%rip),%rax        # ffff800000104004 <Start_Kernel+0x4>
ffff80000010400b:	49 bb 64 11 00 00 00 	movabs $0x1164,%r11
ffff800000104012:	00 00 00 
ffff800000104015:	4c 01 d8             	add    %r11,%rax
ffff800000104018:	eb fe                	jmp    ffff800000104018 <Start_Kernel+0x18>

Disassembly of section .eh_frame:

ffff800000104020 <.eh_frame>:
ffff800000104020:	14 00                	adc    $0x0,%al
ffff800000104022:	00 00                	add    %al,(%rax)
ffff800000104024:	00 00                	add    %al,(%rax)
ffff800000104026:	00 00                	add    %al,(%rax)
ffff800000104028:	01 7a 52             	add    %edi,0x52(%rdx)
ffff80000010402b:	00 01                	add    %al,(%rcx)
ffff80000010402d:	78 10                	js     ffff80000010403f <_etext+0x25>
ffff80000010402f:	01 1b                	add    %ebx,(%rbx)
ffff800000104031:	0c 07                	or     $0x7,%al
ffff800000104033:	08 90 01 00 00 18    	or     %dl,0x18000001(%rax)
ffff800000104039:	00 00                	add    %al,(%rax)
ffff80000010403b:	00 1c 00             	add    %bl,(%rax,%rax,1)
ffff80000010403e:	00 00                	add    %al,(%rax)
ffff800000104040:	c0 ff ff             	sar    $0xff,%bh
ffff800000104043:	ff 1a                	lcall  *(%rdx)
ffff800000104045:	00 00                	add    %al,(%rax)
ffff800000104047:	00 00                	add    %al,(%rax)
ffff800000104049:	41 0e                	rex.B (bad) 
ffff80000010404b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
ffff800000104051:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data:

ffff800000104058 <GDT_Table>:
	...
ffff800000104064:	00 98 20 00 00 00    	add    %bl,0x20(%rax)
ffff80000010406a:	00 00                	add    %al,(%rax)
ffff80000010406c:	00 92 00 00 00 00    	add    %dl,0x0(%rdx)
ffff800000104072:	00 00                	add    %al,(%rax)
ffff800000104074:	00 f8                	add    %bh,%al
ffff800000104076:	20 00                	and    %al,(%rax)
ffff800000104078:	00 00                	add    %al,(%rax)
ffff80000010407a:	00 00                	add    %al,(%rax)
ffff80000010407c:	00 f2                	add    %dh,%dl
ffff80000010407e:	00 00                	add    %al,(%rax)
ffff800000104080:	ff                   	(bad)  
ffff800000104081:	ff 00                	incl   (%rax)
ffff800000104083:	00 00                	add    %al,(%rax)
ffff800000104085:	9a                   	(bad)  
ffff800000104086:	cf                   	iret   
ffff800000104087:	00 ff                	add    %bh,%bh
ffff800000104089:	ff 00                	incl   (%rax)
ffff80000010408b:	00 00                	add    %al,(%rax)
ffff80000010408d:	92                   	xchg   %eax,%edx
ffff80000010408e:	cf                   	iret   
	...

ffff8000001040e0 <GDT_END>:
ffff8000001040e0:	87 00                	xchg   %eax,(%rax)

ffff8000001040e2 <GDT_BASE>:
ffff8000001040e2:	58                   	pop    %rax
ffff8000001040e3:	40 10 00             	adc    %al,(%rax)
ffff8000001040e6:	00 80 ff ff      	add    %al,0xffff(%rax)

ffff8000001040ea <IDT_Table>:
	...

ffff8000001050ea <IDT_END>:
ffff8000001050ea:	ff 0f                	decl   (%rdi)

ffff8000001050ec <IDT_BASE>:
ffff8000001050ec:	ea                   	(bad)  
ffff8000001050ed:	40 10 00             	adc    %al,(%rax)
ffff8000001050f0:	00 80 ff ff      	add    %al,0xffff(%rax)

ffff8000001050f4 <TSS64_Table>:
	...

ffff80000010515c <TSS64_END>:
ffff80000010515c:	67 00              	addr32 add %dh,%ah

ffff80000010515e <TSS64_BASE>:
ffff80000010515e:	f4                   	hlt    
ffff80000010515f:	50                   	push   %rax
ffff800000105160:	10 00                	adc    %al,(%rax)
ffff800000105162:	00                   	.byte 0x0
ffff800000105163:	80 ff ff             	cmp    $0xff,%bh

Disassembly of section .got.plt:

ffff800000105168 <_GLOBAL_OFFSET_TABLE_>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_start-0xffff8000000fff88>
   a:	74 75                	je     81 <_start-0xffff8000000fff7f>
   c:	20 37                	and    %dh,(%rdi)
   e:	2e 34 2e             	cs xor $0x2e,%al
  11:	30 2d 31 75 62 75    	xor    %ch,0x75627531(%rip)        # 75627548 <_start-0xffff7fff8aad8ab8>
  17:	6e                   	outsb  %ds:(%rsi),(%dx)
  18:	74 75                	je     8f <_start-0xffff8000000fff71>
  1a:	31 7e 31             	xor    %edi,0x31(%rsi)
  1d:	38 2e                	cmp    %ch,(%rsi)
  1f:	30 34 2e             	xor    %dh,(%rsi,%rbp,1)
  22:	31 29                	xor    %ebp,(%rcx)
  24:	20 37                	and    %dh,(%rdi)
  26:	2e 34 2e             	cs xor $0x2e,%al
  29:	30 00                	xor    %al,(%rax)
